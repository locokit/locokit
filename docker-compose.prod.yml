# This docker-compose is for testing purpose only
# For a deployment, you'll need to set a mail server
# and security with helmet environment variables,
# maybe a nginx for serving front and reverse proxy to the api and the file storage.

# Please also change the user / password of lck-db
# and update accordingly the api/.env.prod.example
services:
  lck-db:
    image: postgis/postgis:15-master
    environment:
      POSTGRES_DB: public
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourPostgresPassword
    # restart: always
    volumes:
      - lck-db-data:/var/lib/postgresql/data
      - ./dumps:/dumps
    container_name: lck-db
    networks:
      - lck

  lck-mail:
    image: mailhog/mailhog:latest
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /home/mailhog
    volumes:
      - mailhog:/home/mailhog/
    ports:
      # - 1025:1025
      - 8025:8025
    container_name: lck-mail
    networks:
      - lck

  lck-api:
    image: locokit/api:next
    ports:
      - "8002:8002"
    depends_on:
      - lck-mail
    container_name: lck-api
    volumes:
      - lck-fs-storage:/code/fs-storage/
      - ./api/config/production.json:/code/config/production.json:ro
    networks:
      - lck
    # this file is located under the api folder
    # this is only for example
    env_file: api/.env.prod.example
    command: pm2-runtime index.js -n locokit-api -i max

  lck-app:
    image: locokit/app:next
    ports:
      - "3000:3000"
    depends_on:
      - lck-api
    container_name: lck-app
    networks:
      - lck
    command: pm2-runtime server/index.mjs -n locokit-app -i max

volumes:
  lck-db-data:
  mailhog:
  lck-fs-storage:

networks:
  lck:
