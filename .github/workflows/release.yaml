name: New release

on:
  push:
    tags:
      - "v*.*.*"

jobs:

  front-build:

    runs-on: ubuntu-latest

    container: node:16
    defaults:
      run:
        working-directory: front

    env:
      VUE_APP_I18N_FALLBACK_LOCALE: 'en'
      VUE_APP_TITLE: '{{ lck_app_title }}'
      VUE_APP_THEME: '{{ lck_app_theme }}'
    
    steps:
      - uses: actions/checkout@v2
      - name: NPM Version
        run: npm -v
      - name: Install dependencies
        run: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci
      - name: Build front
        run: npm run build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          VUE_APP_VERSION: ${{ github.ref_name }}
      - name: Create default index.html
        run: npm run build:html
        env:
          VUE_APP_TITLE: 'LocoKit platform'
          VUE_APP_THEME: 'locokit'
          VUE_APP_VERSION: ${{ github.ref_name }}
      - name: Tar build
        run: cd dist && tar -czvf lck-front-build-artifact.tar.gz *
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lck-front-build-artifact.tar.gz
          path: |
            front/dist/lck-front-build-artifact.tar.gz

  ## API Part
  api-build:
    runs-on: ubuntu-latest

    container: node:16

    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v2
      - name: NPM Version
        run: npm -v
      - name: Install dependencies
        run: npm ci
      - name: Build API lib
        run: npm run compile
      - name: Tar build
        run: tar -czvf lck-api-build-artifact.tar.gz lib
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lck-api-build-artifact.tar.gz
          path: |
            api/lck-api-build-artifact.tar.gz

  ## Documentation part
  docs-build:
    runs-on: ubuntu-latest

    env:
      BASE_URL: '/'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Build documentation
        run: npm run docs:build
      - name: Tar docs
        run: tar -czvf lck-docs-build-artifact.tar.gz docs/.vitepress/dist/
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lck-docs-build-artifact.tar.gz
          path: |
            lck-docs-build-artifact.tar.gz
  
  docs-push-pages:
    runs-on: ubuntu-latest
    needs: [docs-build]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Rm all files
        run: |
          rm -rf *
      - name: Config git
        run: |
          git config --global user.email "mathieu@dartic.fr"
          git config --global user.name "mdartic"
      - name: Config git
        run: |
          git add .
          git commit -m "Remove old files"
      - name: Create CNAME
        run: echo "docs.locokit.io" > CNAME
      - name: Download docs artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-docs-build-artifact.tar.gz
      - name: Extract docs artifact
        run: tar -xzf lck-docs-build-artifact.tar.gz
      - name: Commit & push files
        run: |
          git add .
          git commit -m "Add changes"
          git push origin gh-pages --force

  ## Docker part
  locokit-docker:
    runs-on: ubuntu-latest
    needs: [front-build, api-build, docs-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            locokit/locokit
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Print GITHUB REF
        run: echo $GITHUB_REF
      - name: Download api artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-api-build-artifact.tar.gz
          # path: api/lib/
      - name: Extract api artifact
        run: tar -xzf lck-api-build-artifact.tar.gz -C api/
      - name: Download front artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-front-build-artifact.tar.gz
          # path: front/dist/
      - name: Extract front artifact
        run: mkdir -p front/dist && tar -xzf lck-front-build-artifact.tar.gz -C front/dist/
      - name: Download docs artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-docs-build-artifact.tar.gz
          # path: docs/.vitepress/dist
      - name: Extract docs artifact
        run: tar -xzf lck-docs-build-artifact.tar.gz
      - name: LS
        run: ls -al
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-release:
    runs-on: ubuntu-latest
    needs: [front-build, api-build, docs-build]
    steps:

      - name: Download api artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-api-build-artifact.tar.gz
      - name: Download front artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-front-build-artifact.tar.gz
      - name: Download docs artifact
        uses: actions/download-artifact@v2
        with: 
          name: lck-docs-build-artifact.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            lck-api-build-artifact.tar.gz
            lck-docs-build-artifact.tar.gz
            lck-front-build-artifact.tar.gz
