# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: API quality workflow

on:
  push:
    branches:
      - next
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  ## Design system
  # design-system-quality:
  #   runs-on: ubuntu-latest
  #   container: node:18
  #   defaults:
  #     run:
  #       working-directory: packages/designsystem
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: NPM Version
  #       run: npm -v
  #     - name: Install dependencies
  #       run: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci --ignore-scripts
  #     - name: lint
  #       run: npm run lint
  #       env:
  #         NODE_OPTIONS: --max_old_space_size=4096

  ## nuxt-locokit
  # nuxt-locokit-quality:

  # nuxt-locokit-build:

  ## app part
  # app-quality:

  # app-build:

  # app-docker:

  ## api
  api-quality:
    runs-on: ubuntu-latest
    container: node:18
    env:
      LCK_PORT: 3030
      LCK_HOST: localhost
      LCK_DATABASE_URL: postgres://postgres:yourPostgresPassword@lck-db:5432/postgres
      LCK_PUBLIC_PORTAL_NAME: LCK_PUBLIC_PORTAL_NAME
      SIGNUP_MAIL_DELAY_DAYS: 10
      NODE_ENV: test
      NODE_OPTIONS: --max_old_space_size=4096

    services:
      lck-db:
        image: postgis/postgis:15-3.3-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: yourPostgresPassword
          TZ: 'UTC'
          PGTZ: 'UTC'
    steps:
      - uses: actions/checkout@v3
      - name: NPM Version
        run: npm -v
      - name: Install turbo
        run: npm i -g turbo --ignore-scripts
      - name: Install dependencies
        run: npm ci --ignore-scripts
      # This is needed for better linting
      # if packages are not built, we can't lint correctly
      - name: Build all dependencies for api
        run: turbo run build --scope=locokit-api
      - name: Lint code
        run: npm run lint --workspace api
      - name: Prettier
        run: npm run prettier --workspace api
      - name: Unit tests
        run: npm run vitest:coverage --workspace api
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Tar coverage
        run: tar -cvzf lck-api-quality-artifact.tar.gz api/coverage
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Archive production artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lck-api-quality-artifact.tar.gz
          path: lck-api-quality-artifact.tar.gz

  api-build:
    runs-on: ubuntu-latest
    container: node:18
    steps:
      - uses: actions/checkout@v3
      - name: NPM Version
        run: npm -v
      - name: Install Turbo
        run: npm i -g turbo
      - name: Install dependencies
        run: npm ci --ignore-scripts --include=dev
      - name: Build API lib
        run: turbo run build --scope=locokit-api
      - name: Tar build
        run: tar -cvzf lck-api-build-artifact.tar.gz api/dist/server
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lck-api-build-artifact.tar.gz
          path: lck-api-build-artifact.tar.gz

  # api-docker:

  ## Documentation part
  docs-build:
    runs-on: ubuntu-latest
    container: node:18
    env:
      BASE_URL: '/'
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build documentation
        run: npm run docs:build
      - name: Tar docs
        run: cd docs/.vitepress/dist/ && tar -czvf lck-docs-build-artifact.tar.gz *
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lck-docs-build-artifact.tar.gz
          path: |
            docs/.vitepress/dist/lck-docs-build-artifact.tar.gz

  general-build:
    runs-on: ubuntu-latest
    container: node:18
    steps:
      - uses: actions/checkout@v3
      - name: NPM Version
        run: npm -v
      - name: Install Turbo
        run: npm i -g turbo
      - name: Install dependencies
        run: npm ci --ignore-scripts --include=dev
      - name: Build all project
        run: turbo run build
      - name: Tar build api
        run: tar -cvzf lck-api-build-artifact.tar.gz api/dist/server
      - name: Tar build app
        run: tar -cvzf lck-app-build-artifact.tar.gz app/.output
      - name: Tar build @locokit/definitions
        run: tar -cvzf locokit-definitions-build-artifact.tar.gz packages/definitions/dist
      - name: Tar build @locokit/designsystem
        run: tar -cvzf locokit-designsystem-build-artifact.tar.gz packages/designsystem/dist
      - name: Tar build @locokit/engine
        run: tar -cvzf locokit-engine-build-artifact.tar.gz packages/engine/dist
      - name: Tar build nuxt-locokit
        run: tar -cvzf nuxt-locokit-build-artifact.tar.gz packages/nuxt-locokit/dist
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lck-build-artifact
          path: |
            lck-api-build-artifact.tar.gz
            lck-app-build-artifact.tar.gz
            locokit-definitions-build-artifact.tar.gz
            locokit-designsystem-build-artifact.tar.gz
            locokit-engine-build-artifact.tar.gz
            nuxt-locokit-build-artifact.tar.gz
