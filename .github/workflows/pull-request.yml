name: pull_request

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  ## Front part
  front-quality:

    runs-on: ubuntu-latest

    container: buildkite/puppeteer

    defaults:
      run:
        working-directory: front

    # - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != ""'

    steps:
      - uses: actions/checkout@v2
      - name: Upgrade NPM
        run: npm i -g npm@7
      - name: NPM Version
        run: npm -v
      - name: Install dependencies
        run: npm ci
      - name: Build storybook
        run: npm run storybook:build
      - name: Unit tests src
        if: always()
        run: npm run test:unit-src -- --coverage --reporters=default
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Unit tests imageshots
        if: always()
        run: npm run test:unit -- tests/unit/imageshots.spec.js
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Unit tests storyshots
        if: always()
        run: npm run test:unit -- tests/unit/storyshots.spec.js
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Archive production artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: lck-front-quality
          path: |
            front/tests/unit/__image_snapshots__
            front/storybook-static

  front-build:

    runs-on: ubuntu-latest

    container: node:16
    defaults:
      run:
        working-directory: front

    # needs: [front-quality]
    # - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG != ""'

    env:
      VUE_APP_I18N_FALLBACK_LOCALE: 'en'
      VUE_APP_TITLE: '{{ lck_app_title }}'
      VUE_APP_THEME: '{{ lck_app_theme }}'
    
    steps:
      - uses: actions/checkout@v2
      - name: NPM Version
        run: npm -v
      - name: Install dependencies
        run: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci
      - name: Build front
        run: npm run build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          VUE_APP_VERSION: ${{ github.ref_name }}
      - name: Create default index.html
        run: npm run build:html
        env:
          VUE_APP_TITLE: 'LocoKit platform'
          VUE_APP_THEME: 'locokit'
          VUE_APP_VERSION: ${{ github.ref_name }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: front-build-artifact
          path: |
            front/dist/

  ## API Part
  api-quality:

    runs-on: ubuntu-latest

    container: node:16

    defaults:
      run:
        working-directory: api

    env:
      LCK_PORT: 3030
      LCK_HOST: localhost
      LCK_DATABASE_URL_TEST: postgres://postgres:yourPostgresPassword@lck-db:5432/postgres

      OBJECTION_DEBUG: 'false'
      NODE_ENV: test

      STORAGE_TYPE: fs
      STORAGE_PUBLIC_PATH: /storage
      STORAGE_FS_PATH: ../fs-storage
      STORAGE_S3_URL: http://lck-s3:9000
      STORAGE_S3_ACCESS_KEY: minio
      STORAGE_S3_SECRET_KEY: notsecret
      STORAGE_S3_PATH_STYLE: 1
      STORAGE_S3_SIGNATURE_VERSION: v4
      STORAGE_S3_DEFAULT_BUCKET: public

      NODE_OPTIONS: --max_old_space_size=4096

    services:
      lck-db:
        image: postgis/postgis:12-3.0
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: yourPostgresPassword

      lck-s3:
        image: minio/minio:latest
        env:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: notsecret
        # options: server /data
    steps:
      - uses: actions/checkout@v2
      - name: NPM Version
        run: npm -v
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Unit tests
        run: npm test
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Archive production artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: api-quality-artifact
          path: |
            api/coverage

  api-build:
    runs-on: ubuntu-latest

    container: node:16

    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v2
      - name: NPM Version
        run: npm -v
      - name: Install dependencies
        run: npm ci
      - name: Build API lib
        run: npm run compile
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: api-build-lib-artifact
          path: |
            api/lib

  ## Documentation part
  docs-build:
    runs-on: ubuntu-latest

    env:
      BASE_URL: '/'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Build documentation
        run: npm run docs:build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docs-build-artifact
          path: |
            docs/.vitepress/dist/
  
  docs-push-pages:
    runs-on: ubuntu-latest
    needs: [docs-build]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Rm all files
        run: |
          rm -rf *
      - name: Config git
        run: |
          git config --global user.email "mathieu@dartic.fr"
          git config --global user.name "mdartic"
      - name: Config git
        run: |
          git add .
          git commit -m "Remove old files"
      - name: Create CNAME
        run: echo "docs.locokit.io" > CNAME
      - name: Download docs artifact
        uses: actions/download-artifact@v2
        with: 
          name: docs-build-artifact
      - name: Commit & push files
        run: |
          git add .
          git commit -m "Add changes"
          git push origin gh-pages --force

  ## Docker part
  locokit-docker:
    runs-on: ubuntu-latest
    needs: [front-build, api-build, docs-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            locokit/locokit
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Print GITHUB REF
        run: echo $GITHUB_REF
      - name: Download api artifact
        uses: actions/download-artifact@v2
        with: 
          name: api-build-lib-artifact
          path: api/lib/
      - name: Download front artifact
        uses: actions/download-artifact@v2
        with: 
          name: front-build-artifact
          path: front/dist/
      - name: Download docs artifact
        uses: actions/download-artifact@v2
        with: 
          name: docs-build-artifact
          path: docs/.vitepress/dist
      - name: LS
        run: ls -al
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
