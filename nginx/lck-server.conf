server {
  listen       80;
  listen  [::]:80;
  server_name  localhost;
  root   /usr/share/nginx/html;

  location ~ (index.html|service-worker.js|config.js)$ {
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
  }

  location /status {
    stub_status;
  }

  #error_page  404              /404.html;

  # redirect server error pages to the static page /50x.html
  #
  # error_page   500 502 503 504  /50x.html;
  # location = /50x.html {
  #     root   /usr/share/nginx/html;
  # }

  # proxy the FeathersJS API 192.168.48.1:3030
  location /api/ {
    proxy_pass         http://192.168.48.1:3030/;
  #     # proxy_redirect default;
  #     # proxy_set_header   Host             $host;
  #     # proxy_set_header   X-Real-IP        $remote_addr;
  #     # proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
  #     # expires off;
  #     # proxy_ignore_headers X-Accel-Expires Expires Cache-Control Vary;
  #     # proxy_hide_header 'Access-Control-Allow-Origin';
  #     # proxy_hide_header 'X-Frame-Options';
  }

  # Proxy to S3 storage (minio). Requests are authenticated on the LCK API.
  location /s3-storage/ {
    # Check authent before accessing files
    auth_request /permission-check;
    auth_request_set $auth_status $upstream_status;

    # Add headers for browser
    add_header Access-Control-Request-Method "GET OPTIONS";
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers "Authorization";

    # Allow only GET & OPTIONS requests
    limit_except GET OPTIONS {
      deny all;
    }

    # Proxy to the S3 compatible server (here we use Minio)
    proxy_pass http://lck-s3:9000/;
    # Remove Authorization header
    # Because Buckets need to be Readable publicly (not Writable)
    proxy_set_header Authorization "";
  }

  # redirect to a folder shared between lck-api and nginx dockers
  location /fs-storage/ {
    # Check authent before accessing files
    auth_request /permission-check;
    auth_request_set $auth_status $upstream_status;

    # Add headers for browser
    add_header Access-Control-Request-Method "GET OPTIONS";
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers "Authorization";

    # Allow only GET & OPTIONS requests
    limit_except GET OPTIONS {
      deny all;
    }

    # this directory is configured to be bound to the API upload folder
    alias   /usr/share/nginx/storage/;
  }

  # The authentication backend
  location /permission-check {
    internal;
    proxy_pass http://192.168.48.1:3030/permission;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
  }

}
