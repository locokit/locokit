import{_ as e,c as a,o as t,d as l}from"./app.78152875.js";var s="/assets/dbschema_210318.0c5fd94f.png";const g='{"title":"Database schema","description":"","frontmatter":{},"headers":[{"level":2,"title":"Workspace","slug":"workspace"},{"level":2,"title":"Database","slug":"database"},{"level":2,"title":"Table","slug":"table"},{"level":2,"title":"Table columns","slug":"table-columns"},{"level":2,"title":"Table rows","slug":"table-rows"},{"level":2,"title":"Table_view","slug":"table-view"},{"level":2,"title":"Tableviewhastablecolumn","slug":"table-view-has-table-column"}],"relativePath":"admin-manual/database.md","lastUpdated":1640381484833}',r={},o=l('<h1 id="database-schema" tabindex="-1">Database schema <a class="header-anchor" href="#database-schema" aria-hidden="true">#</a></h1><p><img src="'+s+'" alt=""></p><h2 id="workspace" tabindex="-1">Workspace <a class="header-anchor" href="#workspace" aria-hidden="true">#</a></h2><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-hidden="true">#</a></h2><h2 id="table" tabindex="-1">Table <a class="header-anchor" href="#table" aria-hidden="true">#</a></h2><h2 id="table-columns" tabindex="-1">Table columns <a class="header-anchor" href="#table-columns" aria-hidden="true">#</a></h2><h2 id="table-rows" tabindex="-1">Table rows <a class="header-anchor" href="#table-rows" aria-hidden="true">#</a></h2><h2 id="table-view" tabindex="-1">Table_view <a class="header-anchor" href="#table-view" aria-hidden="true">#</a></h2><h2 id="table-view-has-table-column" tabindex="-1">Table_view_has_table_column <a class="header-anchor" href="#table-view-has-table-column" aria-hidden="true">#</a></h2><ul><li><strong>table_view_id</strong>: reference to the table view id</li><li><strong>table_column_id</strong>: reference to the table column id</li><li><strong>position</strong>: order of the column in the view table</li><li><strong>filter</strong>: filter according to Default Query Operators of Feathersjs (e.g <code>{&quot;$eq&quot;: &quot;{userId}&quot;}</code>)</li><li><strong>displayed</strong>: whether the column has to be displayed</li><li><strong>transmitted</strong>: whether the column is transmitted in the API response. Default value: <code>true</code></li><li><strong>editable</strong>: whether the column is editable</li><li><strong>style</strong>: inject style css rules to the column (e.g <code>{&quot;width&quot;: 583}</code>)</li><li><strong>default</strong>: value which specify a data/template in order to parameterize a behaviour (e.g <code>{rowId}</code>)</li><li><strong>sort</strong>: sorts values into a column. (e.g <code>ASC</code> or <code>DESC</code>)</li></ul>',10),i=[o];function d(n,c,h,b,u,_){return t(),a("div",null,i)}var p=e(r,[["render",d]]);export{g as __pageData,p as default};
